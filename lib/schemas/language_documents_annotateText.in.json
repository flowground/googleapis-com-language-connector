{
    "type": "object",
    "properties": {
        "access_token": {
            "type": "string"
        },
        "alt": {
            "type": "string",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "default": "json"
        },
        "callback": {
            "type": "string"
        },
        "fields": {
            "type": "string"
        },
        "key": {
            "type": "string"
        },
        "oauth_token": {
            "type": "string"
        },
        "prettyPrint": {
            "type": "boolean",
            "default": true
        },
        "quotaUser": {
            "type": "string"
        },
        "uploadType": {
            "type": "string"
        },
        "upload_protocol": {
            "type": "string"
        },
        "requestBody": {
            "description": "The request message for the text annotation API, which can perform multiple\nanalysis types (sentiment, entities, and syntax) in one call.",
            "properties": {
                "document": {
                    "description": "Input document.",
                    "properties": {
                        "content": {
                            "description": "The content of the input in string format.\nCloud audit logging exempt since it is based on user data.",
                            "type": "string"
                        },
                        "gcsContentUri": {
                            "description": "The Google Cloud Storage URI where the file content is located.\nThis URI must be of the form: gs://bucket_name/object_name. For more\ndetails, see https://cloud.google.com/storage/docs/reference-uris.\nNOTE: Cloud Storage object versioning is not supported.",
                            "type": "string"
                        },
                        "language": {
                            "description": "The language of the document (if not specified, the language is\nautomatically detected). Both ISO and BCP-47 language codes are\naccepted.<br>\n[Language Support](/natural-language/docs/languages)\nlists currently supported languages for each API method.\nIf the language (either specified by the caller or automatically detected)\nis not supported by the called API method, an `INVALID_ARGUMENT` error\nis returned.",
                            "type": "string"
                        },
                        "type": {
                            "description": "Required. If the type is not set or is `TYPE_UNSPECIFIED`,\nreturns an `INVALID_ARGUMENT` error.",
                            "enum": [
                                "TYPE_UNSPECIFIED",
                                "PLAIN_TEXT",
                                "HTML"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "encodingType": {
                    "description": "The encoding type used by the API to calculate offsets.",
                    "enum": [
                        "NONE",
                        "UTF8",
                        "UTF16",
                        "UTF32"
                    ],
                    "type": "string"
                },
                "features": {
                    "description": "The enabled features.",
                    "properties": {
                        "classifyText": {
                            "description": "Classify the full document into categories.",
                            "type": "boolean"
                        },
                        "extractDocumentSentiment": {
                            "description": "Extract document-level sentiment.",
                            "type": "boolean"
                        },
                        "extractEntities": {
                            "description": "Extract entities.",
                            "type": "boolean"
                        },
                        "extractEntitySentiment": {
                            "description": "Extract entities and their associated sentiment.",
                            "type": "boolean"
                        },
                        "extractSyntax": {
                            "description": "Extract syntax information.",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "__xgafv": {
            "type": "string",
            "enum": [
                "1",
                "2"
            ]
        }
    }
}